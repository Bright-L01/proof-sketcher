{"dependencies": [{"name": "absl-py", "version": "2.1.0", "vulns": []}, {"name": "accelerate", "version": "1.3.0", "vulns": []}, {"name": "aiofiles", "version": "24.1.0", "vulns": []}, {"name": "aiohappyeyeballs", "version": "2.4.6", "vulns": []}, {"name": "aiohttp", "version": "3.11.12", "vulns": []}, {"name": "aiosignal", "version": "1.3.2", "vulns": []}, {"name": "alabaster", "version": "1.0.0", "vulns": []}, {"name": "alembic", "version": "1.16.2", "vulns": []}, {"name": "altair", "version": "5.5.0", "vulns": []}, {"name": "annotated-types", "version": "0.7.0", "vulns": []}, {"name": "anthropic", "version": "0.55.0", "vulns": []}, {"name": "anyio", "version": "4.8.0", "vulns": []}, {"name": "appnope", "version": "0.1.4", "vulns": []}, {"name": "apscheduler", "version": "3.11.0", "vulns": []}, {"name": "argon2-cffi", "version": "23.1.0", "vulns": []}, {"name": "argon2-cffi-bindings", "version": "21.2.0", "vulns": []}, {"name": "arrow", "version": "1.3.0", "vulns": []}, {"name": "arviz", "version": "0.20.0", "vulns": []}, {"name": "astroid", "version": "3.3.10", "vulns": []}, {"name": "asttokens", "version": "3.0.0", "vulns": []}, {"name": "astunparse", "version": "1.6.3", "vulns": []}, {"name": "async-lru", "version": "2.0.4", "vulns": []}, {"name": "attrs", "version": "25.1.0", "vulns": []}, {"name": "authlib", "version": "1.6.0", "vulns": []}, {"name": "autoflake", "version": "2.3.1", "vulns": []}, {"name": "babel", "version": "2.17.0", "vulns": []}, {"name": "bandit", "version": "1.8.5", "vulns": []}, {"name": "bcrypt", "version": "4.3.0", "vulns": []}, {"name": "beautifulsoup4", "version": "4.13.3", "vulns": []}, {"name": "black", "version": "25.1.0", "vulns": []}, {"name": "bleach", "version": "6.2.0", "vulns": []}, {"name": "blinker", "version": "1.9.0", "vulns": []}, {"name": "boolean-py", "version": "5.0", "vulns": []}, {"name": "bottle", "version": "0.13.4", "vulns": []}, {"name": "brotli", "version": "1.1.0", "vulns": []}, {"name": "build", "version": "1.2.2.post1", "vulns": []}, {"name": "cachecontrol", "version": "0.14.3", "vulns": []}, {"name": "cached-property", "version": "1.5.2", "vulns": []}, {"name": "cachetools", "version": "5.5.1", "vulns": []}, {"name": "catboost", "version": "1.2.8", "vulns": []}, {"name": "certifi", "version": "2025.1.31", "vulns": []}, {"name": "cffi", "version": "1.17.1", "vulns": []}, {"name": "cfgv", "version": "3.4.0", "vulns": []}, {"name": "chardet", "version": "5.2.0", "vulns": []}, {"name": "charset-normalizer", "version": "3.4.1", "vulns": []}, {"name": "check-manifest", "version": "0.50", "vulns": []}, {"name": "click", "version": "8.2.1", "vulns": []}, {"name": "cloudpickle", "version": "3.1.1", "vulns": []}, {"name": "colorama", "version": "0.4.6", "vulns": []}, {"name": "colorlog", "version": "6.9.0", "vulns": []}, {"name": "comm", "version": "0.2.2", "vulns": []}, {"name": "cons", "version": "0.4.6", "vulns": []}, {"name": "contourpy", "version": "1.3.1", "vulns": []}, {"name": "coverage", "version": "7.9.1", "vulns": []}, {"name": "cryptography", "version": "45.0.4", "vulns": []}, {"name": "cycler", "version": "0.12.1", "vulns": []}, {"name": "cyclonedx-python-lib", "version": "9.1.0", "vulns": []}, {"name": "databricks-sdk", "version": "0.57.0", "vulns": []}, {"name": "datasets", "version": "3.3.0", "vulns": []}, {"name": "debugpy", "version": "1.8.12", "vulns": []}, {"name": "decorator", "version": "5.1.1", "vulns": []}, {"name": "defusedxml", "version": "0.7.1", "vulns": []}, {"name": "deprecated", "version": "1.2.18", "vulns": []}, {"name": "detect-secrets", "version": "1.5.0", "vulns": []}, {"name": "dill", "version": "0.3.8", "vulns": []}, {"name": "distlib", "version": "0.3.9", "vulns": []}, {"name": "distro", "version": "1.9.0", "vulns": []}, {"name": "dm-tree", "version": "0.1.9", "vulns": []}, {"name": "dnspython", "version": "2.7.0", "vulns": []}, {"name": "docker", "version": "7.1.0", "vulns": []}, {"name": "docstring-parser", "version": "0.16", "vulns": []}, {"name": "docutils", "version": "0.21.2", "vulns": []}, {"name": "ecdsa", "version": "0.19.1", "vulns": []}, {"name": "email-validator", "version": "2.2.0", "vulns": []}, {"name": "et-xmlfile", "version": "2.0.0", "vulns": []}, {"name": "etils", "version": "1.12.0", "vulns": []}, {"name": "etuples", "version": "0.3.9", "vulns": []}, {"name": "exceptiongroup", "version": "1.2.2", "vulns": []}, {"name": "execnet", "version": "2.1.1", "vulns": []}, {"name": "executing", "version": "2.1.0", "vulns": []}, {"name": "factory-boy", "version": "3.3.3", "vulns": []}, {"name": "faker", "version": "37.4.0", "vulns": []}, {"name": "fastapi", "version": "0.115.14", "vulns": []}, {"name": "fastjsonschema", "version": "2.21.1", "vulns": []}, {"name": "fastmcp", "version": "2.9.2", "vulns": []}, {"name": "fica", "version": "0.4.1", "vulns": []}, {"name": "filelock", "version": "3.17.0", "vulns": []}, {"name": "flake8", "version": "7.3.0", "vulns": []}, {"name": "flask", "version": "3.1.1", "vulns": []}, {"name": "flatbuffers", "version": "25.2.10", "vulns": []}, {"name": "fonttools", "version": "4.56.0", "vulns": []}, {"name": "fqdn", "version": "1.5.1", "vulns": []}, {"name": "freezegun", "version": "1.5.2", "vulns": []}, {"name": "frozenlist", "version": "1.5.0", "vulns": []}, {"name": "fsspec", "version": "2024.12.0", "vulns": []}, {"name": "gast", "version": "0.6.0", "vulns": []}, {"name": "gdown", "version": "5.2.0", "vulns": []}, {"name": "geoalchemy2", "version": "0.17.1", "vulns": []}, {"name": "git-filter-repo", "version": "2.47.0", "vulns": []}, {"name": "gitdb", "version": "4.0.12", "vulns": []}, {"name": "gitpython", "version": "3.1.44", "vulns": []}, {"name": "gmpy2", "version": "2.1.5", "vulns": []}, {"name": "google-api-core", "version": "2.25.1", "vulns": []}, {"name": "google-api-python-client", "version": "2.174.0", "vulns": []}, {"name": "google-auth", "version": "2.40.3", "vulns": []}, {"name": "google-auth-httplib2", "version": "0.2.0", "vulns": []}, {"name": "google-auth-oauthlib", "version": "1.2.2", "vulns": []}, {"name": "google-pasta", "version": "0.2.0", "vulns": []}, {"name": "googleapis-common-protos", "version": "1.67.0", "vulns": []}, {"name": "graphene", "version": "3.4.3", "vulns": []}, {"name": "graphql-core", "version": "3.2.6", "vulns": []}, {"name": "graphql-relay", "version": "3.2.0", "vulns": []}, {"name": "graphviz", "version": "0.20.3", "vulns": []}, {"name": "greenlet", "version": "3.1.1", "vulns": []}, {"name": "grpcio", "version": "1.65.5", "vulns": []}, {"name": "gunicorn", "version": "23.0.0", "vulns": []}, {"name": "h11", "version": "0.14.0", "vulns": [{"id": "GHSA-vqfr-h8mv-ghfj", "fix_versions": ["0.16.0"], "aliases": ["CVE-2025-43859"], "description": "### Impact  A leniency in h11's parsing of line terminators in chunked-coding message bodies can lead to request smuggling vulnerabilities under certain conditions.  ### Details  HTTP/1.1 Chunked-Encoding bodies are formatted as a sequence of \"chunks\", each of which consists of:  - chunk length - `\\r\\n` - `length` bytes of content - `\\r\\n`  In versions of h11 up to 0.14.0, h11 instead parsed them as:  - chunk length - `\\r\\n` - `length` bytes of content - any two bytes  i.e. it did not validate that the trailing `\\r\\n` bytes were correct, and if you put 2 bytes of garbage there it would be accepted, instead of correctly rejecting the body as malformed.  By itself this is harmless. However, suppose you have a proxy or reverse-proxy that tries to analyze HTTP requests, and your proxy has a _different_ bug in parsing Chunked-Encoding, acting as if the format is:  - chunk length - `\\r\\n` - `length` bytes of content - more bytes of content, as many as it takes until you find a `\\r\\n`  For example, [pound](https://github.com/graygnuorg/pound/pull/43) had this bug -- it can happen if an implementer uses a generic \"read until end of line\" helper to consumes the trailing `\\r\\n`.  In this case, h11 and your proxy may both accept the same stream of bytes, but interpret them differently. For example, consider the following HTTP request(s) (assume all line breaks are `\\r\\n`):  ``` GET /one HTTP/1.1 Host: localhost Transfer-Encoding: chunked  5 AAAAAXX2 45 0  GET /two HTTP/1.1 Host: localhost Transfer-Encoding: chunked  0 ```  Here h11 will interpret it as two requests, one with body `AAAAA45` and one with an empty body, while our hypothetical buggy proxy will interpret it as a single request, with body `AAAAXX20\\r\\n\\r\\nGET /two ...`. And any time two HTTP processors both accept the same string of bytes but interpret them differently, you have the conditions for a \"request smuggling\" attack. For example, if `/two` is a dangerous endpoint and the job of the reverse proxy is to stop requests from getting there, then an attacker could use a bytestream like the above to circumvent this protection.  Even worse, if our buggy reverse proxy receives two requests from different users:  ``` GET /one HTTP/1.1 Host: localhost Transfer-Encoding: chunked  5 AAAAAXX999 0 ```  ``` GET /two HTTP/1.1 Host: localhost Cookie: SESSION_KEY=abcdef... ```  ...it will consider the first request to be complete and valid, and send both on to the h11-based web server over the same socket. The server will then see the two concatenated requests, and interpret them as _one_ request to `/one` whose body includes `/two`'s session key, potentially allowing one user to steal another's credentials.  ### Patches  Fixed in h11 0.15.0.  ### Workarounds  Since exploitation requires the combination of buggy h11 with a buggy (reverse) proxy, fixing either component is sufficient to mitigate this issue.  ### Credits  Reported by Jeppe Bonde Weikop on 2025-01-09."}]}, {"name": "h2", "version": "4.2.0", "vulns": []}, {"name": "h5netcdf", "version": "1.5.0", "vulns": []}, {"name": "h5py", "version": "3.12.1", "vulns": []}, {"name": "hpack", "version": "4.1.0", "vulns": []}, {"name": "httpcore", "version": "1.0.7", "vulns": []}, {"name": "httplib2", "version": "0.22.0", "vulns": []}, {"name": "httpx", "version": "0.28.1", "vulns": []}, {"name": "httpx-sse", "version": "0.4.1", "vulns": []}, {"name": "huggingface-hub", "version": "0.28.0", "vulns": []}, {"name": "hyperframe", "version": "6.1.0", "vulns": []}, {"name": "hypothesis", "version": "6.135.20", "vulns": []}, {"name": "id", "version": "1.5.0", "vulns": []}, {"name": "identify", "version": "2.6.12", "vulns": []}, {"name": "idna", "version": "3.10", "vulns": []}, {"name": "imagecodecs", "version": "2024.9.22", "vulns": []}, {"name": "imageio", "version": "2.37.0", "vulns": []}, {"name": "imagesize", "version": "1.4.1", "vulns": []}, {"name": "immutabledict", "version": "4.2.1", "vulns": []}, {"name": "importlib-metadata", "version": "8.6.1", "vulns": []}, {"name": "importlib-resources", "version": "6.5.2", "vulns": []}, {"name": "iniconfig", "version": "2.1.0", "vulns": []}, {"name": "ipykernel", "version": "6.29.5", "vulns": []}, {"name": "ipylab", "version": "1.0.0", "vulns": []}, {"name": "ipython", "version": "8.32.0", "vulns": []}, {"name": "ipywidgets", "version": "8.1.5", "vulns": []}, {"name": "isoduration", "version": "20.11.0", "vulns": []}, {"name": "isort", "version": "6.0.1", "vulns": []}, {"name": "itsdangerous", "version": "2.2.0", "vulns": []}, {"name": "jaraco-classes", "version": "3.4.0", "vulns": []}, {"name": "jaraco-context", "version": "6.0.1", "vulns": []}, {"name": "jaraco-functools", "version": "4.2.1", "vulns": []}, {"name": "jedi", "version": "0.19.2", "vulns": []}, {"name": "jinja2", "version": "3.1.6", "vulns": []}, {"name": "jiter", "version": "0.10.0", "vulns": []}, {"name": "joblib", "version": "1.4.2", "vulns": []}, {"name": "json5", "version": "0.10.0", "vulns": []}, {"name": "jsonpickle", "version": "4.1.1", "vulns": []}, {"name": "jsonpointer", "version": "3.0.0", "vulns": []}, {"name": "jsonschema", "version": "4.23.0", "vulns": []}, {"name": "jsonschema-specifications", "version": "2024.10.1", "vulns": []}, {"name": "jupyter-client", "version": "8.6.3", "vulns": []}, {"name": "jupyter-core", "version": "5.7.2", "vulns": [{"id": "GHSA-33p9-3p43-82vq", "fix_versions": ["5.8.1"], "aliases": ["CVE-2025-30167"], "description": "## Impact  On Windows, the shared `%PROGRAMDATA%` directory is searched for configuration files (`SYSTEM_CONFIG_PATH` and `SYSTEM_JUPYTER_PATH`), which may allow users to create configuration files affecting other users.  Only shared Windows systems with multiple users and unprotected `%PROGRAMDATA%` are affected.  ## Mitigations  - upgrade to `jupyter_core>=5.8.1` (5.8.0 is patched but breaks `jupyter-server`) , or - as administrator, modify the permissions on the `%PROGRAMDATA%` directory so it is not writable by unauthorized users, or - as administrator, create the `%PROGRAMDATA%\\jupyter` directory with appropriately restrictive permissions, or - as user or administrator, set the `%PROGRAMDATA%` environment variable to a directory with appropriately restrictive permissions (e.g. controlled by administrators _or_ the current user)  ## Credit  Reported via Trend Micro Zero Day Initiative as ZDI-CAN-25932"}]}, {"name": "jupyter-events", "version": "0.12.0", "vulns": []}, {"name": "jupyter-lsp", "version": "2.2.5", "vulns": []}, {"name": "jupyter-server", "version": "2.15.0", "vulns": []}, {"name": "jupyter-server-terminals", "version": "0.5.3", "vulns": []}, {"name": "jupyterlab", "version": "4.3.5", "vulns": []}, {"name": "jupyterlab-pygments", "version": "0.3.0", "vulns": []}, {"name": "jupyterlab-server", "version": "2.27.3", "vulns": []}, {"name": "jupyterlab-vim", "version": "4.1.4", "vulns": []}, {"name": "jupyterlab-widgets", "version": "3.0.13", "vulns": []}, {"name": "jupytext", "version": "1.16.7", "vulns": []}, {"name": "keras", "version": "3.8.0", "vulns": [{"id": "GHSA-48g7-3x6r-xfhp", "fix_versions": ["3.9.0"], "aliases": ["CVE-2025-1550"], "description": "### Impact  The Keras `Model.load_model` function permits arbitrary code execution, even with `safe_mode=True`, through a manually constructed, malicious `.keras` archive. By altering the `config.json` file within the archive, an attacker can specify arbitrary Python modules and functions, along with their arguments, to be loaded and executed during model loading.  ### Patches  This problem is fixed starting with version `3.9`.  ### Workarounds  Only load models from trusted sources and model archives created with Keras.  ### References  - https://www.cve.org/cverecord?id=CVE-2025-1550 - https://github.com/keras-team/keras/pull/20751"}]}, {"name": "keyring", "version": "25.6.0", "vulns": []}, {"name": "kiwisolver", "version": "1.4.8", "vulns": []}, {"name": "lazy-loader", "version": "0.4", "vulns": []}, {"name": "license-expression", "version": "30.4.3", "vulns": []}, {"name": "lightgbm", "version": "4.6.0", "vulns": []}, {"name": "lime", "version": "0.2.0.1", "vulns": []}, {"name": "logical-unification", "version": "0.4.6", "vulns": []}, {"name": "loguru", "version": "0.7.3", "vulns": []}, {"name": "lxml", "version": "5.3.1", "vulns": []}, {"name": "mako", "version": "1.3.10", "vulns": []}, {"name": "markdown", "version": "3.6", "vulns": []}, {"name": "markdown-it-py", "version": "3.0.0", "vulns": []}, {"name": "markupsafe", "version": "3.0.2", "vulns": []}, {"name": "matplotlib", "version": "3.10.0", "vulns": []}, {"name": "matplotlib-inline", "version": "0.1.7", "vulns": []}, {"name": "mccabe", "version": "0.7.0", "vulns": []}, {"name": "mcp", "version": "1.9.4", "vulns": []}, {"name": "mdit-py-plugins", "version": "0.4.2", "vulns": []}, {"name": "mdurl", "version": "0.1.2", "vulns": []}, {"name": "memory-profiler", "version": "0.61.0", "vulns": []}, {"name": "minikanren", "version": "1.0.3", "vulns": []}, {"name": "mistune", "version": "3.1.1", "vulns": []}, {"name": "ml-dtypes", "version": "0.4.0", "vulns": []}, {"name": "mlflow", "version": "3.1.1", "vulns": []}, {"name": "mlflow-skinny", "version": "3.1.1", "vulns": []}, {"name": "more-itertools", "version": "10.7.0", "vulns": []}, {"name": "mpmath", "version": "1.3.0", "vulns": []}, {"name": "msgpack", "version": "1.1.1", "vulns": []}, {"name": "multidict", "version": "6.1.0", "vulns": []}, {"name": "multipledispatch", "version": "0.6.0", "vulns": []}, {"name": "multiprocess", "version": "0.70.16", "vulns": []}, {"name": "munkres", "version": "1.1.4", "vulns": []}, {"name": "music21", "version": "9.7.1", "vulns": []}, {"name": "music21-mcp-server", "skip_reason": "Dependency not found on PyPI and could not be audited: music21-mcp-server (0.1.0)"}, {"name": "mypy", "version": "1.16.1", "vulns": []}, {"name": "mypy-extensions", "version": "1.1.0", "vulns": []}, {"name": "mysql-connector-python", "version": "9.0.0", "vulns": [{"id": "GHSA-hgjp-83m4-h4fj", "fix_versions": ["9.1.0"], "aliases": ["CVE-2024-21272"], "description": "Vulnerability in the MySQL Connectors product of Oracle MySQL (component: Connector/Python).  Supported versions that are affected are 9.0.0 and prior. Difficult to exploit vulnerability allows low privileged attacker with network access via multiple protocols to compromise MySQL Connectors.  Successful attacks of this vulnerability can result in takeover of MySQL Connectors. CVSS 3.1 Base Score 7.5 (Confidentiality, Integrity and Availability impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H)."}]}, {"name": "myst-parser", "version": "4.0.1", "vulns": []}, {"name": "namex", "version": "0.0.8", "vulns": []}, {"name": "narwhals", "version": "1.45.0", "vulns": []}, {"name": "nbclient", "version": "0.10.2", "vulns": []}, {"name": "nbconvert", "version": "7.16.6", "vulns": []}, {"name": "nbformat", "version": "5.10.4", "vulns": []}, {"name": "nbopen", "version": "0.7", "vulns": []}, {"name": "nest-asyncio", "version": "1.6.0", "vulns": []}, {"name": "networkx", "version": "3.4.2", "vulns": []}, {"name": "networkx-mcp-server", "skip_reason": "Dependency not found on PyPI and could not be audited: networkx-mcp-server (1.0.0)"}, {"name": "nh3", "version": "0.2.21", "vulns": []}, {"name": "nltk", "version": "3.9.1", "vulns": []}, {"name": "nodeenv", "version": "1.9.1", "vulns": []}, {"name": "notebook", "version": "7.3.2", "vulns": []}, {"name": "notebook-shim", "version": "0.2.4", "vulns": []}, {"name": "numpy", "version": "2.3.1", "vulns": []}, {"name": "oauthlib", "version": "3.3.1", "vulns": []}, {"name": "openai", "version": "1.93.0", "vulns": []}, {"name": "openapi-pydantic", "version": "0.5.1", "vulns": []}, {"name": "openpyxl", "version": "3.1.5", "vulns": []}, {"name": "opentelemetry-api", "version": "1.34.1", "vulns": []}, {"name": "opentelemetry-sdk", "version": "1.34.1", "vulns": []}, {"name": "opentelemetry-semantic-conventions", "version": "0.55b1", "vulns": []}, {"name": "opt-einsum", "version": "3.4.0", "vulns": []}, {"name": "optree", "version": "0.14.0", "vulns": []}, {"name": "optuna", "version": "4.4.0", "vulns": []}, {"name": "optuna-dashboard", "version": "0.19.0", "vulns": []}, {"name": "orjson", "version": "3.10.18", "vulns": []}, {"name": "otter-grader", "version": "6.1.0", "vulns": []}, {"name": "outcome", "version": "1.3.0.post0", "vulns": []}, {"name": "overrides", "version": "7.7.0", "vulns": []}, {"name": "packageurl-python", "version": "0.17.1", "vulns": []}, {"name": "packaging", "version": "24.2", "vulns": []}, {"name": "pandas", "version": "2.2.3", "vulns": []}, {"name": "pandocfilters", "version": "1.5.0", "vulns": []}, {"name": "parso", "version": "0.8.4", "vulns": []}, {"name": "passlib", "version": "1.7.4", "vulns": []}, {"name": "pathspec", "version": "0.12.1", "vulns": []}, {"name": "patsy", "version": "1.0.1", "vulns": []}, {"name": "pbr", "version": "6.1.1", "vulns": []}, {"name": "pexpect", "version": "4.9.0", "vulns": []}, {"name": "pickleshare", "version": "0.7.5", "vulns": []}, {"name": "pillow", "version": "11.3.0", "vulns": []}, {"name": "pip", "version": "25.1.1", "vulns": []}, {"name": "pip-api", "version": "0.0.34", "vulns": []}, {"name": "pip-audit", "version": "2.9.0", "vulns": []}, {"name": "pip-requirements-parser", "version": "32.0.1", "vulns": []}, {"name": "pkgutil-resolve-name", "version": "1.3.10", "vulns": []}, {"name": "platformdirs", "version": "4.3.6", "vulns": []}, {"name": "playwright", "version": "1.50.0", "vulns": []}, {"name": "plotly", "version": "6.2.0", "vulns": []}, {"name": "pluggy", "version": "1.6.0", "vulns": []}, {"name": "polars", "version": "1.31.0", "vulns": []}, {"name": "pre-commit", "version": "4.2.0", "vulns": []}, {"name": "prometheus-client", "version": "0.21.1", "vulns": []}, {"name": "promise", "version": "2.3", "vulns": []}, {"name": "prompt-toolkit", "version": "3.0.50", "vulns": []}, {"name": "proof-sketcher", "skip_reason": "Dependency not found on PyPI and could not be audited: proof-sketcher (0.1.0)"}, {"name": "propcache", "version": "0.2.1", "vulns": []}, {"name": "proto-plus", "version": "1.26.1", "vulns": []}, {"name": "protobuf", "version": "5.27.5", "vulns": [{"id": "GHSA-8qvm-5x2c-j2w7", "fix_versions": ["4.25.8", "5.29.5", "6.31.1"], "aliases": ["CVE-2025-4565"], "description": "### Summary Any project that uses Protobuf pure-Python backend to parse untrusted Protocol Buffers data containing an arbitrary number of **recursive groups**, **recursive messages** or **a series of [`SGROUP`](https://protobuf.dev/programming-guides/encoding/#groups) tags** can be corrupted by exceeding the Python recursion limit.  Reporter: Alexis Challande, Trail of Bits Ecosystem Security Team [ecosystem@trailofbits.com](mailto:ecosystem@trailofbits.com)  Affected versions: This issue only affects the [pure-Python implementation](https://github.com/protocolbuffers/protobuf/tree/main/python#implementation-backends) of protobuf-python backend. This is the implementation when `PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python` environment variable is set or the default when protobuf is used from Bazel or pure-Python PyPi wheels. CPython PyPi wheels do not use pure-Python by default.  This is a Python variant of a [previous issue affecting protobuf-java](https://github.com/protocolbuffers/protobuf/security/advisories/GHSA-735f-pc8j-v9w8).  ### Severity This is a potential Denial of Service. Parsing nested protobuf data creates unbounded recursions that can be abused by an attacker.  ### Proof of Concept For reproduction details, please refer to the unit tests [decoder_test.py](https://github.com/protocolbuffers/protobuf/blob/main/python/google/protobuf/internal/decoder_test.py#L87-L98) and [message_test](https://github.com/protocolbuffers/protobuf/blob/main/python/google/protobuf/internal/message_test.py#L1436-L1478)  ### Remediation and Mitigation A mitigation is available now. Please update to the latest available versions of the following packages: * protobuf-python(4.25.8, 5.29.5, 6.31.1)"}]}, {"name": "psutil", "version": "6.1.1", "vulns": []}, {"name": "psycopg2-binary", "version": "2.9.10", "vulns": []}, {"name": "ptyprocess", "version": "0.7.0", "vulns": []}, {"name": "pure-eval", "version": "0.2.3", "vulns": []}, {"name": "py-cpuinfo", "version": "9.0.0", "vulns": []}, {"name": "py-serializable", "version": "2.0.0", "vulns": []}, {"name": "pyarrow", "version": "18.0.0", "vulns": []}, {"name": "pyasn1", "version": "0.6.1", "vulns": []}, {"name": "pyasn1-modules", "version": "0.4.2", "vulns": []}, {"name": "pycodestyle", "version": "2.14.0", "vulns": []}, {"name": "pycparser", "version": "2.22", "vulns": []}, {"name": "pydantic", "version": "2.11.7", "vulns": []}, {"name": "pydantic-core", "version": "2.33.2", "vulns": []}, {"name": "pydantic-settings", "version": "2.10.1", "vulns": []}, {"name": "pydeck", "version": "0.9.1", "vulns": []}, {"name": "pyee", "version": "12.1.1", "vulns": []}, {"name": "pyflakes", "version": "3.4.0", "vulns": []}, {"name": "pygments", "version": "2.19.2", "vulns": []}, {"name": "pymc", "version": "5.20.1", "vulns": []}, {"name": "pyobjc-core", "version": "11.0", "vulns": []}, {"name": "pyobjc-framework-cocoa", "version": "11.0", "vulns": []}, {"name": "pyparsing", "version": "3.2.1", "vulns": []}, {"name": "pyproject-hooks", "version": "1.2.0", "vulns": []}, {"name": "pysocks", "version": "1.7.1", "vulns": []}, {"name": "pytensor", "version": "2.27.1", "vulns": []}, {"name": "pytest", "version": "8.4.1", "vulns": []}, {"name": "pytest-asyncio", "version": "1.0.0", "vulns": []}, {"name": "pytest-benchmark", "version": "5.1.0", "vulns": []}, {"name": "pytest-cov", "version": "6.2.1", "vulns": []}, {"name": "pytest-mock", "version": "3.14.1", "vulns": []}, {"name": "pytest-xdist", "version": "3.7.0", "vulns": []}, {"name": "python-dateutil", "version": "2.9.0.post0", "vulns": []}, {"name": "python-dotenv", "version": "1.1.1", "vulns": []}, {"name": "python-jose", "version": "3.5.0", "vulns": []}, {"name": "python-json-logger", "version": "2.0.7", "vulns": []}, {"name": "python-multipart", "version": "0.0.20", "vulns": []}, {"name": "python-on-whales", "version": "0.75.1", "vulns": []}, {"name": "pytz", "version": "2024.1", "vulns": []}, {"name": "pywavelets", "version": "1.8.0", "vulns": []}, {"name": "pyyaml", "version": "6.0.2", "vulns": []}, {"name": "pyzmq", "version": "26.2.1", "vulns": []}, {"name": "readme-renderer", "version": "44.0", "vulns": []}, {"name": "redis", "version": "6.2.0", "vulns": []}, {"name": "referencing", "version": "0.36.2", "vulns": []}, {"name": "regex", "version": "2024.11.6", "vulns": []}, {"name": "requests", "version": "2.32.3", "vulns": [{"id": "GHSA-9hjg-9r4m-mvj7", "fix_versions": ["2.32.4"], "aliases": ["CVE-2024-47081"], "description": "### Impact  Due to a URL parsing issue, Requests releases prior to 2.32.4 may leak .netrc credentials to third parties for specific maliciously-crafted URLs.  ### Workarounds For older versions of Requests, use of the .netrc file can be disabled with `trust_env=False` on your Requests Session ([docs](https://requests.readthedocs.io/en/latest/api/#requests.Session.trust_env)).  ### References https://github.com/psf/requests/pull/6965 https://seclists.org/fulldisclosure/2025/Jun/2"}]}, {"name": "requests-oauthlib", "version": "2.0.0", "vulns": []}, {"name": "requests-toolbelt", "version": "1.0.0", "vulns": []}, {"name": "rfc3339-validator", "version": "0.1.4", "vulns": []}, {"name": "rfc3986", "version": "2.0.0", "vulns": []}, {"name": "rfc3986-validator", "version": "0.1.1", "vulns": []}, {"name": "rich", "version": "13.9.4", "vulns": []}, {"name": "rpds-py", "version": "0.22.3", "vulns": []}, {"name": "rsa", "version": "4.9.1", "vulns": []}, {"name": "ruff", "version": "0.12.1", "vulns": []}, {"name": "safetensors", "version": "0.5.2", "vulns": []}, {"name": "scikit-image", "version": "0.25.1", "vulns": []}, {"name": "scikit-learn", "version": "1.6.1", "vulns": []}, {"name": "scipy", "version": "1.16.0", "vulns": []}, {"name": "seaborn", "version": "0.13.2", "vulns": []}, {"name": "selenium", "version": "4.28.1", "vulns": []}, {"name": "send2trash", "version": "1.8.3", "vulns": []}, {"name": "sentence-transformers", "version": "5.0.0", "vulns": []}, {"name": "setuptools", "version": "75.8.0", "vulns": [{"id": "PYSEC-2025-49", "fix_versions": ["78.1.1"], "aliases": ["CVE-2025-47273", "GHSA-5rjg-fvgr-3xxf"], "description": "setuptools is a package that allows users to download, build, install, upgrade, and uninstall Python packages. A path traversal vulnerability in `PackageIndex` is present in setuptools prior to version 78.1.1. An attacker would be allowed to write files to arbitrary locations on the filesystem with the permissions of the process running the Python code, which could escalate to remote code execution depending on the context. Version 78.1.1 fixes the issue."}]}, {"name": "shapely", "version": "2.1.1", "vulns": []}, {"name": "shellingham", "version": "1.5.4", "vulns": []}, {"name": "simple-parsing", "version": "0.1.7", "vulns": []}, {"name": "simpulse", "skip_reason": "Dependency not found on PyPI and could not be audited: simpulse (1.1.0)"}, {"name": "six", "version": "1.17.0", "vulns": []}, {"name": "smmap", "version": "5.0.2", "vulns": []}, {"name": "sniffio", "version": "1.3.1", "vulns": []}, {"name": "snowballstemmer", "version": "2.2.0", "vulns": []}, {"name": "sortedcontainers", "version": "2.4.0", "vulns": []}, {"name": "soupsieve", "version": "2.5", "vulns": []}, {"name": "sphinx", "version": "8.1.3", "vulns": []}, {"name": "sphinx-autoapi", "version": "3.6.0", "vulns": []}, {"name": "sphinx-rtd-theme", "version": "3.0.2", "vulns": []}, {"name": "sphinxcontrib-applehelp", "version": "2.0.0", "vulns": []}, {"name": "sphinxcontrib-devhelp", "version": "2.0.0", "vulns": []}, {"name": "sphinxcontrib-htmlhelp", "version": "2.1.0", "vulns": []}, {"name": "sphinxcontrib-jquery", "version": "4.1", "vulns": []}, {"name": "sphinxcontrib-jsmath", "version": "1.0.1", "vulns": []}, {"name": "sphinxcontrib-qthelp", "version": "2.0.0", "vulns": []}, {"name": "sphinxcontrib-serializinghtml", "version": "2.0.0", "vulns": []}, {"name": "sqlalchemy", "version": "1.4.54", "vulns": []}, {"name": "sqlparse", "version": "0.5.3", "vulns": []}, {"name": "sse-starlette", "version": "2.3.6", "vulns": []}, {"name": "stack-data", "version": "0.6.3", "vulns": []}, {"name": "starlette", "version": "0.46.2", "vulns": []}, {"name": "statsmodels", "version": "0.14.4", "vulns": []}, {"name": "stevedore", "version": "5.4.1", "vulns": []}, {"name": "streamlit", "version": "1.46.1", "vulns": []}, {"name": "sympy", "version": "1.13.3", "vulns": []}, {"name": "tenacity", "version": "9.1.2", "vulns": []}, {"name": "tensorboard", "version": "2.17.1", "vulns": []}, {"name": "tensorboard-data-server", "version": "0.7.0", "vulns": []}, {"name": "tensorflow", "version": "2.17.0", "vulns": []}, {"name": "tensorflow-datasets", "version": "4.9.7", "vulns": []}, {"name": "tensorflow-estimator", "version": "2.15.0", "vulns": []}, {"name": "tensorflow-metadata", "version": "1.16.1", "vulns": []}, {"name": "termcolor", "version": "2.5.0", "vulns": []}, {"name": "terminado", "version": "0.18.1", "vulns": []}, {"name": "tf-keras-vis", "version": "0.8.7", "vulns": []}, {"name": "threadpoolctl", "version": "3.5.0", "vulns": []}, {"name": "tifffile", "version": "2024.12.12", "vulns": []}, {"name": "tinycss2", "version": "1.4.0", "vulns": []}, {"name": "tokenizers", "version": "0.21.0", "vulns": []}, {"name": "toml", "version": "0.10.2", "vulns": []}, {"name": "tomli", "version": "2.2.1", "vulns": []}, {"name": "toolz", "version": "1.0.0", "vulns": []}, {"name": "torch", "skip_reason": "Dependency not found on PyPI and could not be audited: torch (2.4.1.post2)"}, {"name": "tornado", "version": "6.4.2", "vulns": [{"id": "GHSA-7cx3-6m66-7c5m", "fix_versions": ["6.5"], "aliases": ["CVE-2025-47287"], "description": "### Summary  When Tornado's ``multipart/form-data`` parser encounters certain errors, it logs a warning but continues trying to parse the remainder of the data. This allows remote attackers to generate an extremely high volume of logs, constituting a DoS attack. This DoS is compounded by the fact that the logging subsystem is synchronous.  ### Affected versions  All versions of Tornado prior to 6.5 are affected. The vulnerable parser is enabled by default.  ### Solution  Upgrade to Tornado version 6.5. In the meantime, risk can be mitigated by blocking `Content-Type: multipart/form-data` in a proxy."}]}, {"name": "tqdm", "version": "4.67.1", "vulns": []}, {"name": "traitlets", "version": "5.14.3", "vulns": []}, {"name": "transformers", "version": "4.48.3", "vulns": [{"id": "PYSEC-2025-40", "fix_versions": ["4.49.0"], "aliases": ["CVE-2025-2099"], "description": "A vulnerability in the `preprocess_string()` function of the `transformers.testing_utils` module in huggingface/transformers version v4.48.3 allows for a Regular Expression Denial of Service (ReDoS) attack. The regular expression used to process code blocks in docstrings contains nested quantifiers, leading to exponential backtracking when processing input with a large number of newline characters. An attacker can exploit this by providing a specially crafted payload, causing high CPU usage and potential application downtime, effectively resulting in a Denial of Service (DoS) scenario."}, {"id": "GHSA-fpwr-67px-3qhx", "fix_versions": ["4.50.0"], "aliases": ["CVE-2025-1194"], "description": "A Regular Expression Denial of Service (ReDoS) vulnerability was identified in the huggingface/transformers library, specifically in the file `tokenization_gpt_neox_japanese.py` of the GPT-NeoX-Japanese model. The vulnerability occurs in the SubWordJapaneseTokenizer class, where regular expressions process specially crafted inputs. The issue stems from a regex exhibiting exponential complexity under certain conditions, leading to excessive backtracking. This can result in high CPU usage and potential application downtime, effectively creating a Denial of Service (DoS) scenario. The affected version is v4.48.1 (latest)."}]}, {"name": "trio", "version": "0.29.0", "vulns": []}, {"name": "trio-websocket", "version": "0.11.1", "vulns": []}, {"name": "twine", "version": "6.1.0", "vulns": []}, {"name": "typer", "version": "0.16.0", "vulns": []}, {"name": "types-networkx", "version": "3.5.0.20250610", "vulns": []}, {"name": "types-psutil", "version": "7.0.0.20250601", "vulns": []}, {"name": "types-python-dateutil", "version": "2.9.0.20241206", "vulns": []}, {"name": "typing-extensions", "version": "4.14.0", "vulns": []}, {"name": "typing-inspection", "version": "0.4.1", "vulns": []}, {"name": "typing-utils", "version": "0.1.0", "vulns": []}, {"name": "tzdata", "version": "2025.1", "vulns": []}, {"name": "tzlocal", "version": "5.3.1", "vulns": []}, {"name": "unicodedata2", "version": "16.0.0", "vulns": []}, {"name": "uri-template", "version": "1.3.0", "vulns": []}, {"name": "uritemplate", "version": "4.2.0", "vulns": []}, {"name": "urllib3", "version": "2.3.0", "vulns": [{"id": "GHSA-48p4-8xcf-vxj5", "fix_versions": ["2.5.0"], "aliases": ["CVE-2025-50182"], "description": "urllib3 [supports](https://urllib3.readthedocs.io/en/2.4.0/reference/contrib/emscripten.html) being used in a Pyodide runtime utilizing the [JavaScript Fetch API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) or falling back on [XMLHttpRequest](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest). This means you can use Python libraries to make HTTP requests from your browser or Node.js. Additionally, urllib3 provides [a mechanism](https://urllib3.readthedocs.io/en/2.4.0/user-guide.html#retrying-requests) to control redirects.  However, the `retries` and `redirect` parameters are ignored with Pyodide; the runtime itself determines redirect behavior.   ## Affected usages  Any code which relies on urllib3 to control the number of redirects for an HTTP request in a Pyodide runtime.   ## Impact  Redirects are often used to exploit SSRF vulnerabilities. An application attempting to mitigate SSRF or open redirect vulnerabilities by disabling redirects may remain vulnerable if a Pyodide runtime redirect mechanism is unsuitable.   ## Remediation  If you use urllib3 in Node.js, upgrade to a patched version of urllib3.  Unfortunately, browsers provide no suitable way which urllib3 can use: `XMLHttpRequest` provides no control over redirects, the Fetch API returns `opaqueredirect` responses lacking data when redirects are controlled manually. Expect default browser behavior for redirects."}, {"id": "GHSA-pq67-6m6q-mj2v", "fix_versions": ["2.5.0"], "aliases": ["CVE-2025-50181"], "description": "urllib3 handles redirects and retries using the same mechanism, which is controlled by the `Retry` object. The most common way to disable redirects is at the request level, as follows:  ```python resp = urllib3.request(\"GET\", \"https://httpbin.org/redirect/1\", redirect=False) print(resp.status) # 302 ```  However, it is also possible to disable redirects, for all requests, by instantiating a `PoolManager` and specifying `retries` in a way that disable redirects:  ```python import urllib3  http = urllib3.PoolManager(retries=0)  # should raise MaxRetryError on redirect http = urllib3.PoolManager(retries=urllib3.Retry(redirect=0))  # equivalent to the above http = urllib3.PoolManager(retries=False)  # should return the first response  resp = http.request(\"GET\", \"https://httpbin.org/redirect/1\") ```  However, the `retries` parameter is currently ignored, which means all the above examples don't disable redirects.  ## Affected usages  Passing `retries` on `PoolManager` instantiation to disable redirects or restrict their number.  By default, requests and botocore users are not affected.  ## Impact  Redirects are often used to exploit SSRF vulnerabilities. An application attempting to mitigate SSRF or open redirect vulnerabilities by disabling redirects at the PoolManager level will remain vulnerable.  ## Remediation  You can remediate this vulnerability with the following steps:   * Upgrade to a patched version of urllib3. If your organization would benefit from the continued support of urllib3 1.x, please contact [sethmichaellarson@gmail.com](mailto:sethmichaellarson@gmail.com) to discuss sponsorship or contribution opportunities.  * Disable redirects at the `request()` level instead of the `PoolManager()` level."}]}, {"name": "uvicorn", "version": "0.35.0", "vulns": []}, {"name": "virtualenv", "version": "20.31.2", "vulns": []}, {"name": "vulture", "version": "2.14", "vulns": []}, {"name": "wcwidth", "version": "0.2.13", "vulns": []}, {"name": "webcolors", "version": "24.11.1", "vulns": []}, {"name": "webencodings", "version": "0.5.1", "vulns": []}, {"name": "websocket-client", "version": "1.8.0", "vulns": []}, {"name": "werkzeug", "version": "3.1.3", "vulns": []}, {"name": "wheel", "version": "0.45.1", "vulns": []}, {"name": "widgetsnbextension", "version": "4.0.13", "vulns": []}, {"name": "wrapt", "version": "1.17.2", "vulns": []}, {"name": "wsproto", "version": "1.2.0", "vulns": []}, {"name": "xarray", "version": "2025.1.2", "vulns": []}, {"name": "xarray-einstats", "version": "0.8.0", "vulns": []}, {"name": "xgboost", "version": "2.1.4", "vulns": []}, {"name": "xxhash", "version": "3.5.0", "vulns": []}, {"name": "yarl", "version": "1.18.3", "vulns": []}, {"name": "zipp", "version": "3.21.0", "vulns": []}, {"name": "zstandard", "version": "0.23.0", "vulns": []}], "fixes": []}
