[build-system]
requires = ["setuptools>=68.0", "wheel", "setuptools-scm>=8.0"]
build-backend = "setuptools.build_meta"

[project]
name = "proof-sketcher"
version = "0.0.1a1"
description = "Transform Lean 4 theorems into natural language explanations"
authors = [
    {name = "Bright Liu", email = "brightliu@college.harvard.edu"}
]
maintainers = [
    {name = "Bright Liu", email = "brightliu@college.harvard.edu"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
keywords = ["lean", "theorem-proving", "documentation", "mathematics", "education", "formal-verification"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Topic :: Software Development :: Documentation",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Framework :: Pytest",
]

dependencies = [
    # Core dependencies
    "click>=8.1.7,<9.0",
    "pydantic>=2.5.0,<3.0",
    "rich>=13.7.0,<14.0",
    "jinja2>=3.1.6,<4.0",
    "PyYAML>=6.0.1,<7.0",
    "toml>=0.10.2,<1.0",
    "typing-extensions>=4.8.0,<5.0",

    # Utilities
    "tenacity>=8.2.3,<9.0",
    "orjson>=3.9.10,<4.0",
    "aiofiles>=23.2.1,<24.0",
    "aiohttp>=3.9.1,<4.0",
    "jsonschema>=4.20.0,<5.0",
    "psutil>=5.9.6,<6.0",

    # Documentation generation
    "beautifulsoup4>=4.12.2,<5.0",
    "Pillow>=11.3.0,<12.0",
    "matplotlib>=3.8.2,<4.0",

    # Security updates
    "h11>=0.16.0,<1.0",
    "httpcore>=1.0.7,<2.0",
    "urllib3>=2.5.0,<3.0",
]

[project.optional-dependencies]
# Development dependencies
dev = [
    # Testing
    "pytest>=8.0,<9.0",
    "pytest-asyncio>=0.21.1,<1.0",
    "pytest-cov>=4.1.0,<5.0",
    "pytest-mock>=3.12.0,<4.0",
    "pytest-timeout>=2.2.0,<3.0",
    "pytest-xdist>=3.5.0,<4.0",  # Parallel testing
    "hypothesis>=6.92.0,<7.0",   # Property-based testing

    # Code quality
    "ruff>=0.1.8,<1.0",          # Replaces flake8, black, isort
    "mypy>=1.7.1,<2.0",
    "pre-commit>=4.0.0,<5.0",

    # Security scanning
    "bandit[toml]>=1.7.5,<2.0",
    "safety>=3.0.0,<4.0",
    "pip-audit>=2.6.1,<3.0",

    # Documentation
    "sphinx>=7.2.6,<8.0",
    "sphinx-rtd-theme>=2.0.0,<3.0",
    "sphinx-autodoc-typehints>=1.25.2,<2.0",
    "myst-parser>=2.0.0,<3.0",

    # Type stubs
    "types-PyYAML>=6.0.12.12",
    "types-toml>=0.10.8.7",
    "types-aiofiles>=23.2.0.0",
]

# Test dependencies (separate for CI optimization)
test = [
    "pytest>=7.4.3,<8.0",
    "pytest-asyncio>=0.21.1,<1.0",
    "pytest-cov>=4.1.0,<5.0",
    "pytest-mock>=3.12.0,<4.0",
    "pytest-timeout>=2.2.0,<3.0",
]

# Documentation building
docs = [
    "sphinx>=7.2.6,<8.0",
    "sphinx-rtd-theme>=2.0.0,<3.0",
    "sphinx-autodoc-typehints>=1.25.2,<2.0",
    "myst-parser>=2.0.0,<3.0",
]

[project.scripts]
proof-sketcher = "proof_sketcher.cli.main:cli"

[project.urls]
"Homepage" = "https://github.com/Bright-L01/proof-sketcher"
"Bug Reports" = "https://github.com/Bright-L01/proof-sketcher/issues"
"Documentation" = "https://proof-sketcher.readthedocs.io"
"Source" = "https://github.com/Bright-L01/proof-sketcher"

[tool.setuptools]
package-dir = {"" = "src"}
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
include = ["proof_sketcher*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
proof_sketcher = [
    "py.typed",
    "parser/grammars/*.lark",
    "exporter/templates/**/*",
    "exporter/static/**/*",
    "config/schemas/*.json",
]

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
pythonpath = ["src"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=proof_sketcher",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=90",  # Target: 90% coverage
    "--maxfail=1",
    "--tb=short",
    "-p no:warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["src/proof_sketcher"]
branch = true
parallel = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__main__.py",
]

[tool.coverage.report]
precision = 2
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

# Mypy configuration
[tool.mypy]
python_version = "3.10"
packages = ["proof_sketcher"]
namespace_packages = true
explicit_package_bases = true

# Strict mode flags
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Output
show_error_context = true
show_column_numbers = true
show_error_codes = true
pretty = true

# Allow some flexibility for specific modules
[[tool.mypy.overrides]]
module = [
    "click.*",
    "rich.*",
    "matplotlib.*",
    "PIL.*",
    "bs4.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_decorators = false

# Ruff is configured in .ruff.toml

# Bandit security configuration
[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv", "build", "dist"]
skips = ["B101", "B601"]  # Skip assert_used and shell=True (controlled usage)

# isort configuration (for compatibility, though Ruff handles this)
[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["proof_sketcher"]
add_imports = ["from __future__ import annotations"]
