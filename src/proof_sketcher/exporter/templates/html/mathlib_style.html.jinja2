<!DOCTYPE html>
<html lang="en" class="{{ 'dark' if theme == 'dark' else 'light' }}">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="generator" content="Proof Sketcher">
    <title>{{ theorem_name }} ‚Äî {{ project_name }}</title>

    <!-- Doc-gen4 compatible CSS -->
    <link rel="stylesheet" href="{{ 'css/doc-gen4.css' | asset_url }}">
    <link rel="stylesheet" href="{{ 'css/theorem.css' | asset_url }}">
    <link rel="stylesheet" href="{{ 'css/responsive.css' | asset_url }}">

    <!-- Math rendering -->
    <link rel="stylesheet" href="{{ 'css/katex.min.css' | asset_url }}">

    <!-- Theme-specific styles -->
    {% if theme == 'dark' %}
    <link rel="stylesheet" href="{{ 'css/dark-theme.css' | theme_asset }}">
    {% endif %}

    <!-- Syntax highlighting -->
    {% if syntax_theme != 'none' %}
    <link rel="stylesheet" href="{{ ('css/prism-' + syntax_theme + '.css') | asset_url }}">
    {% endif %}

    <meta name="description" content="{{ introduction | truncate(150) }}">
    <meta property="og:title" content="{{ theorem_name }}">
    <meta property="og:description" content="{{ introduction | truncate(150) }}">
    <meta property="og:type" content="article">

    {% if animation_assets and animation_assets.poster %}
    <meta property="og:image" content="{{ animation_assets.poster.url }}">
    {% endif %}
</head>

<body class="decl">
    <!-- Doc-gen4 compatible navigation structure -->
    <nav class="nav">
        <div class="nav-container">
            <a href="{{ index_url }}" class="nav-logo">{{ project_name }}</a>

            <div class="nav-menu">
                {% if prev_theorem %}
                <a href="{{ prev_theorem.url }}" class="nav-link" title="Previous theorem">
                    ‚Üê {{ prev_theorem.name }}
                </a>
                {% endif %}

                <a href="{{ index_url }}" class="nav-link">Index</a>

                {% if next_theorem %}
                <a href="{{ next_theorem.url }}" class="nav-link" title="Next theorem">
                    {{ next_theorem.name }} ‚Üí
                </a>
                {% endif %}
            </div>

            <!-- Theme toggle -->
            <button class="theme-toggle" onclick="toggleTheme()" title="Toggle theme">
                <span class="theme-icon">üåì</span>
            </button>
        </div>
    </nav>

    <main class="decl-main">
        <!-- Theorem header -->
        <header class="decl-header">
            <h1 class="decl-name">{{ theorem_name }}</h1>

            {% if theorem_statement %}
            <div class="decl-type">theorem</div>
            {% endif %}

            <!-- Metadata badges -->
            <div class="decl-meta">
                {% if key_steps %}
                <span class="meta-badge">{{ key_steps|length }} steps</span>
                {% endif %}

                {% if difficulty_level %}
                <span class="meta-badge difficulty-{{ difficulty_level }}">{{ difficulty_level }}</span>
                {% endif %}

                {% if animation_assets %}
                <span class="meta-badge animated">üé• Animated</span>
                {% endif %}

                {% if mathematical_areas %}
                {% for area in mathematical_areas %}
                <span class="meta-badge area">{{ area }}</span>
                {% endfor %}
                {% endif %}
            </div>
        </header>

        <!-- Statement -->
        {% if theorem_statement %}
        <section class="decl-stmt">
            <h2>Statement</h2>
            <div class="expr math-display">
                {{ theorem_statement | render_math(display=true) }}
            </div>
        </section>
        {% endif %}

        <!-- Animation section -->
        {% if animation_assets %}
        <section class="decl-animation">
            <h2>Proof Animation</h2>
            <div class="animation-container">
                {% if animation_assets.video %}
                <video class="proof-video"
                       controls
                       preload="metadata"
                       {% if animation_assets.poster %}poster="{{ animation_assets.poster.url }}"{% endif %}>

                    <!-- Multiple source formats for browser compatibility -->
                    <source src="{{ animation_assets.video.url }}" type="{{ animation_assets.video.type }}">
                    {% if animation_assets.webm %}
                    <source src="{{ animation_assets.webm.url }}" type="{{ animation_assets.webm.type }}">
                    {% endif %}

                    <!-- Fallback for browsers without video support -->
                    {% if animation_assets.gif %}
                    <img src="{{ animation_assets.gif.url }}"
                         alt="{{ theorem_name }} proof animation"
                         class="animation-fallback">
                    {% elif animation_assets.poster %}
                    <img src="{{ animation_assets.poster.url }}"
                         alt="{{ theorem_name }} proof preview"
                         class="animation-fallback">
                    {% endif %}

                    <p class="video-unsupported">
                        Your browser doesn't support video playback.
                        <a href="{{ animation_assets.video.url }}">Download the animation</a>
                        {% if animation_assets.gif %}
                        or <a href="{{ animation_assets.gif.url }}">view as GIF</a>
                        {% endif %}.
                    </p>
                </video>

                <!-- Animation controls -->
                <div class="animation-controls">
                    <button class="play-pause-btn" onclick="togglePlayPause()">‚èØÔ∏è</button>
                    <button class="fullscreen-btn" onclick="toggleFullscreen()">‚õ∂</button>
                    {% if animation_assets.gif %}
                    <a href="{{ animation_assets.gif.url }}" class="gif-link" target="_blank">View as GIF</a>
                    {% endif %}
                </div>
                {% endif %}
            </div>
        </section>
        {% endif %}

        <!-- Introduction -->
        {% if introduction %}
        <section class="decl-intro">
            <h2>Introduction</h2>
            <div class="prose">
                {{ introduction | render_math }}
            </div>
        </section>
        {% endif %}

        <!-- Proof steps -->
        {% if key_steps %}
        <section class="decl-proof">
            <h2>Proof Steps</h2>

            <!-- Progress indicator -->
            <div class="proof-progress">
                <div class="progress-bar" id="proof-progress">
                    <div class="progress-fill" style="width: 0%"></div>
                </div>
                <span class="progress-text">Step <span id="current-step">0</span> of {{ key_steps|length }}</span>
            </div>

            <ol class="step-list">
                {% for step in key_steps %}
                <li class="step" id="step-{{ step.step_number }}" data-step="{{ step.step_number }}">
                    <div class="step-header">
                        <h3 class="step-title">
                            Step {{ step.step_number }}: {{ step.description }}
                        </h3>
                        {% if step.tactics %}
                        <div class="step-tactics">
                            {% for tactic in step.tactics %}
                            <code class="tactic">{{ tactic }}</code>
                            {% endfor %}
                        </div>
                        {% endif %}
                    </div>

                    {% if step.mathematical_content %}
                    <div class="step-math expr">
                        {{ step.mathematical_content | render_math(display=true) }}
                    </div>
                    {% endif %}

                    {% if step.justification %}
                    <div class="step-justification prose">
                        {{ step.justification | render_math }}
                    </div>
                    {% endif %}

                    <!-- Dependencies -->
                    {% if step.dependencies %}
                    <div class="step-deps">
                        <span class="deps-label">Depends on:</span>
                        {% for dep in step.dependencies %}
                        <a href="#step-{{ dep }}" class="dep-link">Step {{ dep }}</a>
                        {% endfor %}
                    </div>
                    {% endif %}
                </li>
                {% endfor %}
            </ol>
        </section>
        {% endif %}

        <!-- Conclusion -->
        {% if conclusion %}
        <section class="decl-conclusion">
            <h2>Conclusion</h2>
            <div class="prose">
                {{ conclusion | render_math }}
            </div>
        </section>
        {% endif %}

        <!-- Cross-references -->
        {% if cross_references %}
        <section class="decl-refs">
            <h2>Related Theorems</h2>
            <ul class="ref-list">
                {% for ref in cross_references %}
                <li class="ref-item">
                    <a href="{{ ref.url }}" class="ref-link">{{ ref.name }}</a>
                    {% if ref.statement %}
                    <div class="ref-stmt">{{ ref.statement | truncate(100) }}</div>
                    {% endif %}
                </li>
                {% endfor %}
            </ul>
        </section>
        {% endif %}
    </main>

    <!-- Footer -->
    <footer class="footer">
        <div class="footer-container">
            <p class="footer-text">
                Generated by <a href="https://github.com/example/proof-sketcher">Proof Sketcher</a>
                {% if timestamp %} on {{ timestamp | format_date('%B %d, %Y') }}{% endif %}
            </p>

            {% if version %}
            <p class="footer-version">Version {{ version }}</p>
            {% endif %}
        </div>
    </footer>

    <!-- JavaScript -->
    <script src="{{ 'js/katex.min.js' | asset_url }}"></script>
    <script src="{{ 'js/katex-auto-render.min.js' | asset_url }}"></script>
    <script src="{{ 'js/navigation.js' | asset_url }}"></script>
    <script src="{{ 'js/video-player.js' | asset_url }}"></script>

    {% if syntax_theme != 'none' %}
    <script src="{{ 'js/prism.js' | asset_url }}"></script>
    {% endif %}

    <script>
        // Initialize KaTeX math rendering
        document.addEventListener("DOMContentLoaded", function() {
            renderMathInElement(document.body, {
                delimiters: [
                    {left: "$$", right: "$$", display: true},
                    {left: "$", right: "$", display: false},
                    {left: "\\[", right: "\\]", display: true},
                    {left: "\\(", right: "\\)", display: false}
                ]
            });

            // Initialize proof step tracking
            initializeProofProgress();

            // Initialize video player
            initializeVideoPlayer();
        });

        // Theme toggle
        function toggleTheme() {
            const html = document.documentElement;
            const currentTheme = html.classList.contains('dark') ? 'dark' : 'light';
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';

            html.classList.remove(currentTheme);
            html.classList.add(newTheme);

            localStorage.setItem('proof-sketcher-theme', newTheme);
        }

        // Load saved theme
        (function() {
            const savedTheme = localStorage.getItem('proof-sketcher-theme');
            if (savedTheme && savedTheme !== '{{ theme }}') {
                document.documentElement.classList.remove('{{ theme }}');
                document.documentElement.classList.add(savedTheme);
            }
        })();

        // Proof progress tracking
        function initializeProofProgress() {
            const steps = document.querySelectorAll('.step');
            const progressFill = document.querySelector('.progress-fill');
            const currentStepSpan = document.getElementById('current-step');

            if (!steps.length) return;

            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        const stepNumber = parseInt(entry.target.dataset.step);
                        const progress = (stepNumber / steps.length) * 100;

                        progressFill.style.width = progress + '%';
                        currentStepSpan.textContent = stepNumber;
                    }
                });
            }, { threshold: 0.5 });

            steps.forEach(step => observer.observe(step));
        }

        // Video player controls
        function initializeVideoPlayer() {
            const video = document.querySelector('.proof-video');
            if (!video) return;

            // Add keyboard controls
            document.addEventListener('keydown', function(e) {
                if (e.target === document.body) {
                    switch(e.code) {
                        case 'Space':
                            e.preventDefault();
                            togglePlayPause();
                            break;
                        case 'KeyF':
                            e.preventDefault();
                            toggleFullscreen();
                            break;
                    }
                }
            });
        }

        function togglePlayPause() {
            const video = document.querySelector('.proof-video');
            if (video) {
                if (video.paused) {
                    video.play();
                } else {
                    video.pause();
                }
            }
        }

        function toggleFullscreen() {
            const video = document.querySelector('.proof-video');
            if (video) {
                if (video.requestFullscreen) {
                    video.requestFullscreen();
                } else if (video.webkitRequestFullscreen) {
                    video.webkitRequestFullscreen();
                } else if (video.msRequestFullscreen) {
                    video.msRequestFullscreen();
                }
            }
        }
    </script>
</body>
</html>
