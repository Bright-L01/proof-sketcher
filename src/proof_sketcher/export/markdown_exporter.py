"""Markdown format exporter for theorem documentation.

This module exports theorems to Markdown format, suitable for
documentation systems, GitHub, and other markdown-based platforms.
"""

import shutil
from datetime import datetime
from pathlib import Path
from typing import Optional

from .base_exporter import BaseExporter
from ..core.alpha_warning import add_alpha_warning_markdown
from ..parser.models import TheoremInfo


class MarkdownExporter(BaseExporter):
    """Export to Markdown format."""

    def export(
        self,
        theorem: TheoremInfo,
        explanation: str,
        visualization: Optional[Path],
        output_path: Path,
    ) -> Path:
        """Export theorem to Markdown format.

        Args:
            theorem: Theorem information
            explanation: Natural language explanation
            visualization: Path to visualization file
            output_path: Where to save the markdown

        Returns:
            Path to exported markdown file
        """
        self._ensure_output_dir(output_path)

        # Build markdown content
        content = f"""# {theorem.name}

{theorem.docstring or '*No description provided.*'}

## Statement

```lean
{theorem.statement}
```

## Explanation

{explanation}
"""

        # Add visualization section if available
        if visualization and visualization.exists():
            # Copy visualization to output directory
            media_dir = output_path.parent / "media"
            media_dir.mkdir(exist_ok=True)
            dest = media_dir / visualization.name
            shutil.copy2(visualization, dest)

            if visualization.suffix == ".mp4":
                content += f"""
## Visualization

[View animation](media/{visualization.name})

> *Note: Click the link above to view the animated proof visualization.*
"""
            else:
                content += f"""
## Visualization

![Proof diagram](media/{visualization.name})
"""

        # Add metadata footer
        content += f"""
---

*Generated on {datetime.now().strftime('%Y-%m-%d %H:%M:%S')} by [Proof Sketcher](https://github.com/yourusername/proof-sketcher)*

**Source**: `{theorem.file_path.name}` (lines {theorem.start_line}-{theorem.end_line})
"""

        # Add alpha warning to Markdown
        content = add_alpha_warning_markdown(content)

        # Write output
        output_path.write_text(content, encoding="utf-8")

        return output_path

    def export_index(self, theorems: list[TheoremInfo], output_path: Path) -> Path:
        """Export an index of multiple theorems.

        Args:
            theorems: List of theorems to index
            output_path: Where to save the index

        Returns:
            Path to index file
        """
        self._ensure_output_dir(output_path)

        content = """# Theorem Documentation Index

This index contains all documented theorems generated by Proof Sketcher.

## Theorems

| Theorem | Description | Source |
|---------|-------------|--------|
"""

        for theorem in theorems:
            # Create relative link to theorem documentation
            theorem_file = f"{theorem.name}.md"
            description = theorem.docstring or "No description"
            if len(description) > 60:
                description = description[:57] + "..."

            content += f"| [{theorem.name}]({theorem_file}) | {description} | `{theorem.file_path.name}` |\n"

        content += f"""

---

*Generated on {datetime.now().strftime('%Y-%m-%d %H:%M:%S')} by [Proof Sketcher](https://github.com/yourusername/proof-sketcher)*
"""

        output_path.write_text(content, encoding="utf-8")
        return output_path
